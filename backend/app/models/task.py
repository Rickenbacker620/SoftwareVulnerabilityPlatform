from pydantic import BaseModel
from datetime import datetime
from app.models.dataset import Dataset, DatasetOverviewSchema
from tortoise import fields, models


class TaskRecord(models.Model):
    dataset: fields.ForeignKeyRelation['Dataset'] = fields.ForeignKeyField(
        'models.Dataset', on_delete=fields.CASCADE)
    task: fields.ForeignKeyRelation['TaskDetail'] = fields.ForeignKeyField(
        'models.TaskDetail', on_delete=fields.CASCADE)
    user: fields.ForeignKeyRelation['TaskDetail'] = fields.ForeignKeyField(
        'models.User', on_delete=fields.CASCADE)

    class Meta:
        unique_together = ("dataset", "task", "user")


class TaskDetail(models.Model):
    name = fields.CharField(unique=True, max_length=30)
    task_type = fields.CharField(max_length=30)

    created_at = fields.DatetimeField(null=True, auto_now_add=True)
    modified_at = fields.DatetimeField(null=True, auto_now=True)

class MyTaskSchema(BaseModel):
    name: str
    task_type: str
    created_at: datetime
    detail: list[DatasetOverviewSchema]


class TaskCreateSchema(BaseModel):
    name: str
    size: int
    task_type: str
    users: list[str]