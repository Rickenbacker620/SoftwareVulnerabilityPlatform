from typing import Optional

from tortoise import models, fields

from app.core.utils import verify_password


class User(models.Model):
    username = fields.CharField(max_length=20, unique=True)
    password_hash = fields.CharField(max_length=128, null=True)
    role: fields.ForeignKeyRelation["Role"] = fields.ForeignKeyField(
        'models.Role',
        on_delete=fields.CASCADE,
    )

    @classmethod
    async def authenticate(cls, *, username: str, password: str) -> Optional["User"]:
        user = await cls.get(username=username)
        if not user:
            return None
        if not verify_password(password, user.password_hash):
            return None
        return user

    class PydanticMeta:
        exclude = ["password_hash"]


class Role(models.Model):
    name = fields.CharField(max_length=100, unique=True)
