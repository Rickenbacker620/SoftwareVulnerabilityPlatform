from typing import List

from fastapi import APIRouter, HTTPException, Depends
from tortoise.contrib.fastapi import HTTPNotFoundError

from app.core import security
from app.schemas.user import UserMeSchema
from app.models.user import Role, RoleMapping
from ..utils import get_current_user
from ...schemas import User, UserCreateSchema, UserSchema, Status

router = APIRouter()


@router.get(
    "/",
    response_model=List[UserSchema]
)
async def get_users():
    return await UserSchema.from_queryset(User.all())


@router.get(
    "/me",
    response_model=UserMeSchema
)
async def me(user: User=Depends(get_current_user)):
    user_info = await RoleMapping.get_or_none(user=user,project=1).prefetch_related("role","user")
    result = UserMeSchema(username=user_info.user.username, role=user_info.role.name)
    return result


@router.post(
    "/",
    response_model=UserSchema
)
async def create_user(user: UserCreateSchema):
    password_hash = security.get_password_hash(user.password)
    user_obj = await User.create(**user.dict(exclude_unset=True), password_hash=password_hash)
    return await UserSchema.from_tortoise_orm(user_obj)


@router.get(
    "/{user_id}",
    response_model=UserSchema,
    responses={404: {"model": HTTPNotFoundError}}
)
async def get_user(user_id: int):
    return await UserSchema.from_queryset_single(User.get(id=user_id))


@router.put(
    "/{user_id}",
    response_model=UserSchema,
    responses={404: {"model": HTTPNotFoundError}}
)
async def update_user(user_id: int, user: UserCreateSchema):
    await User.filter(id=user_id).update(**user.dict(exclude_unset=True))
    return await UserSchema.from_queryset_single(User.get(id=user_id))


@router.delete(
    "/{user_id}",
    response_model=Status,
    responses={404: {"model": HTTPNotFoundError}}
)
async def delete_user(user_id: int):
    deleted_count = await User.filter(id=user_id).delete()
    if not deleted_count:
        raise HTTPException(
            status_code=404, detail=f"User {user_id} not found")
    return Status(message=f"Deleted user {user_id}")
