from django.contrib.auth import login
from ..serializers.role import UserLoginSerializer, UserRegisterSerializer
from rest_framework import viewsets
from rest_framework.response import Response
from django.contrib.auth.models import User
from rest_framework.decorators import action
from rest_framework import status
from rest_framework.permissions import AllowAny


class UserViewSet(viewsets.ModelViewSet):

    def get_serializer_class(self, *args, **kwargs):
        return UserRegisterSerializer

    def get_queryset(self):
        return User.objects.all()

    def list(self, request):
        queryset = User.objects.all()
        serializer = UserRegisterSerializer(instance=queryset, many=True)
        return Response(serializer.data)

    @action(detail=False, methods=['POST'])
    def register(self, request):
        serializer = UserRegisterSerializer(data=request.data)
        if serializer.is_valid():
            user = serializer.save()
            if user:
                json = serializer.data
                return Response(json, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    @action(detail=False, methods=['POST'], permission_classes=[AllowAny])
    def login(self, request):
        print(request.data)
        serializer = UserLoginSerializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        user = serializer.validated_data['user']
        login(request, user)
        return Response("success")
