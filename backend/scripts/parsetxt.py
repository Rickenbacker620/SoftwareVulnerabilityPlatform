from os import listdir

from h11 import Data
from base import *

def get_pure_string(string: str): return ''.join(ch for ch in string if ch.isalnum())

description_list = [(dataset["_id"], get_pure_string(dataset["description"])) for dataset in approved_datasets]


def convert_lines(lines: list[str]):
    sentence = lines[0].strip("[]'").split("', '")
    predict = lines[1].strip("\"()[]'预测结果, ").split("', '")
    label = lines[2].strip("\"()[]'标注结果, ").split("', '")

    original_sentence = "".join(sentence)

    cve = find_cve_by_description(original_sentence) or "CVENOTFOUND"

    new_sentence =  [f"{s}({p},{l})" for s, p, l in zip(sentence,predict,label)]

    new_sentence = cve + " " + " ".join(new_sentence)

    return cve, new_sentence


def convert_lines2(lines: list[str]):
    sentence = lines[0][2:-2].split("', '")
    predict = lines[1][2:-2].split("', '")

    original_sentence = "".join(sentence).strip("[CLS][SEP]")

    cve = find_cve_by_description(original_sentence) or "CVENOTFOUND"

    new_sentence =  [f"{s}({p})" for s, p in zip(sentence,predict)]

    new_sentence = cve + " " + " ".join(new_sentence)

    return cve, new_sentence

def convert_lines3(lines: list[str]):
    sentence = [line.split()[0] for line in lines]

    original_sentence = "".join(sentence).strip("S")

    cve = find_cve_by_description(original_sentence) or "CVENOTFOUND"

    return cve

# file_lst = listdir("inputs")
# for file in file_lst:
#     filename = file.strip(".txt")
#     lines = []
#     with open("inputs/" + file+ ".txt", "r") as read, open("outputs/" + file+ ".txt", "w") as write:
#         for line in read.readlines():
#             line = line.strip()
#             if not line:
#                 continue
#             lines.append(line)
#             if len(lines) == 2:
#                 s = convert_lines2(lines)
#                 write.write(s + "\n\n")
#                 lines.clear()

file_lst = listdir("inputs")
for file in file_lst:
    lines = []
    cves = set()
    with open("inputs/" + file , "r") as read, open("outputs/" + "new-" + file , "w") as write:
        for line in read.readlines():
            line = line.strip()
            if not line:
                continue
            lines.append(line)
            if len(lines) == 3:
                cve, s = convert_lines(lines)
                cve_obj = dataset_collection.find_one({"_id": cve})
                dss = Dataset(cve_obj)
                causes = dss["cause"]
                if causes != []:
                    tt = causes[0].detail
                else:
                    tt = "NULL"
                cves.add(cve)
                write.write(tt + "-" + s + "\n\n")
                lines.clear()
    print(file, len(cves))

# file_lst = ["94.P0.97_R0.97_F0.97"]
# for file in file_lst:
#     lines = []
#     cves = set()
#     with open("inputs/" + file , "r") as read:
#         for line in read.readlines():
#             line = line.strip()
#             if not line:
#                 cve = convert_lines3(lines)
#                 print(cve)
#                 cves.add(cve)
#                 lines.clear()
#             else:
#                 lines.append(line)
#     print(len(cves))