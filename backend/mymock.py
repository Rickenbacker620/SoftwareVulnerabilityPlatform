#fmt: off
import os
import shutil

import django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

REMAKE = 1

if REMAKE == 1:
    try:
        shutil.rmtree('api/migrations')
    except:
        pass
    try:
        os.remove('db.sqlite3')
    except:
        pass
    os.system('python3 manage.py makemigrations api')
    os.system('python3 manage.py migrate')


from model_bakery import baker
from model_bakery.recipe import Recipe, seq
from itertools import cycle
from django.conf import settings
from api.models import Dataset, Project
from random import randint
os.system('python3 manage.py flush --noinput')
from django.contrib.auth import get_user_model
User = get_user_model()

role_names = [settings.ROLE_PROJECT_ADMIN, settings.ROLE_ANNOTATOR, settings.ROLE_ANNOTATION_APPROVER]
roles = [Recipe('api.Role',name=role_name).make() for role_name in role_names]

projects = seq('project')
users = seq('user')

rolemappings = Recipe('api.RoleMapping',user__username=users,project__name=projects, role=cycle(roles), _quantity=10)
rolemappings.make()
User.objects.filter(username='user1').update(is_superuser=True, is_staff=True)
admin = User.objects.get(username='user1')
admin.set_password('lucifer')
admin.save()

project1 = Project.objects.get(name='project1')
project2 = Project.objects.get(name='project2')

datasets = Recipe('api.Dataset', project=cycle([project1,project2]), _fill_optional=True,_quantity=7)

datasets.make()

users = User.objects.all()[0:2]

datas = Dataset.objects.all()[0:2]

annotation = Recipe('api.Annotation',
                    start_offset=lambda:randint(1,9),
                    end_offset=lambda:randint(10,20),
                    user=cycle(users),
                    dataset=cycle(datas),
                    # _fill_optional=True,
                    _quantity=10)

annotation.make()

baker.make('api.DetailCategory', _fill_optional=True, _quantity=10)
baker.make('api.PartCategory', _fill_optional=True, _quantity=10)



# print("hello")

