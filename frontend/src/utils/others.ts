import { h } from "vue"
import { NIcon } from "naive-ui"
import _ from "lodash-es"

export function renderIcon(icon) {
    return () => h(NIcon, null, { default: () => h(icon) })
}

export function getTextTokenIdx(text: string) {
    if (text[text.length-1] === '.')
        text = text.slice(0, text.length - 1)
    const temp = [...text.matchAll(/,?\.?\s/g)].flatMap((e) => [
        e.index ?? 1,
        (e.index ?? 1) + e[0].length,
    ])
    const pairup = _.chunk([0, ...temp, text.length], 2) as [number, number][]
    return pairup
}

export function simplifyDate(e) {
    const date = new Date(e.modified_at)
    e.modified_at = date.toLocaleString("zh-CN")
    return e
}

export function fillIntervals(annotations, length) {
    const temp: any = []
    let pivot = 0
    for (const idx in annotations) {
        const current = annotations[idx]
        if (current.start_offset != pivot) {
            temp.push({
                start_offset: pivot,
                end_offset: current.start_offset,
                part: "plain",
            })
        }
        temp.push(current)
        pivot = current.end_offset
    }
    if (pivot != length) {
        temp.push({ start_offset: pivot, end_offset: length, part: "plain" })
    }
    return temp
}

export function annotationWithCursor(annotations, position, mode) {
    const [start, end] = [position[0], position[1]]
    const temp = annotations.filter(
        (e) => e.start_offset > end || e.end_offset < start,
    )
    const canadd = temp.length === annotations.length ? true : false
    temp.push({ start_offset: start, end_offset: end, part: mode })
    temp.sort((a, b) => a.start_offset - b.start_offset)
    return temp
}
